Index: src/main/java/tools/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tools;\r\n\r\nimport society.Human;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\nimport static gui.Panel.people;\r\nimport static gui.Screen.WIN_HEIGHT;\r\nimport static gui.Screen.WIN_WIDTH;\r\nimport static society.Logic.maxSpeed;\r\n\r\n/**\r\n * Class create and stores position, velocity and acceleration of society objects.\r\n * @author Lukasz Michalski\r\n */\r\npublic class Map {\r\n\r\n    private java.util.Map<Human, java.util.Map<String, Vector>> map;\r\n\r\n    public Map(){}\r\n\r\n    /**\r\n     * Constructor of map\r\n     * @param SIZE of created map\r\n     */\r\n    public Map(int SIZE) {\r\n        map = attributesCreator(SIZE);\r\n    }\r\n\r\n    /**\r\n     * Create map which stores society objects movement param (dictionaries, every store unique movement parameters of society objects)\r\n     * @param SIZE of map (society)\r\n     * @return full map\r\n     */\r\n    private java.util.Map<Human, java.util.Map<String, Vector>> attributesCreator(int SIZE) {\r\n        map = new HashMap<>();\r\n        if (SIZE > 0) {\r\n            ArrayList<java.util.Map<String, Vector>> attributesStack = new ArrayList<>();\r\n            for (int i = 0; i < SIZE; i++) {\r\n                java.util.Map<String, Vector> attributes = new HashMap<>();\r\n                attributes.put(\"position\", new Vector(Math.random() * WIN_WIDTH, Math.random() * WIN_HEIGHT));\r\n                attributes.put(\"velocity\", new Vector(Math.random() * (maxSpeed) +- 2, Math.random() * (maxSpeed) +- 2));\r\n                attributes.put(\"acceleration\", new Vector());\r\n                attributesStack.add(attributes);\r\n                map.put(people.get(i), attributesStack.get(i));\r\n            }\r\n\r\n            return map;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Method get position vector of human from map\r\n     * @param human analyze object (key to dictionary)\r\n     * @return position vector of object\r\n     */\r\n    public Vector getPosition(Human human) {\r\n        return map.get(human).get(\"position\");\r\n    }\r\n\r\n    /**\r\n     * Method set new position to human and save in map\r\n     * @param human analyze object (key to dictionary)\r\n     * @param position new position vector to set\r\n     */\r\n    public void setPosition(Human human, Vector position) {\r\n        map.get(human).put(\"position\", position);\r\n    }\r\n\r\n    /**\r\n     * Method get velocity vector of human from map\r\n     * @param human analyze object (key to dictionary)\r\n     * @return velocity vector of object\r\n     */\r\n    public Vector getVelocity(Human human) {\r\n        return map.get(human).get(\"velocity\");\r\n    }\r\n\r\n    /**\r\n     * Method set new velocity to human and save in map\r\n     * @param human analyze object (key to dictionary)\r\n     * @param velocity new velocity vector to set\r\n     */\r\n    public void setVelocity(Human human, Vector velocity) {\r\n        map.get(human).put(\"velocity\", velocity);\r\n    }\r\n\r\n    /**\r\n     * Method get acceleration vector of human from map\r\n     * @param human analyze object (key to dictionary)\r\n     * @return acceleration vector of object\r\n     */\r\n    public Vector getAcceleration(Human human) {\r\n        return map.get(human).get(\"acceleration\");\r\n    }\r\n\r\n    /**\r\n     * Method set new acceleration to human and save in map\r\n     * @param human analyze object (key to dictionary)\r\n     * @param acceleration new acceleration vector to set\r\n     */\r\n    public void setAcceleration(Human human, Vector acceleration) {\r\n        map.get(human).put(\"acceleration\", acceleration);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/tools/Map.java b/src/main/java/tools/Map.java
--- a/src/main/java/tools/Map.java	(revision 46327aeceb82c8dd89aeabe3e6ebf13a4f44d7ad)
+++ b/src/main/java/tools/Map.java	(date 1622451176148)
@@ -25,7 +25,7 @@
      * @param SIZE of created map
      */
     public Map(int SIZE) {
-        map = attributesCreator(SIZE);
+        map = mapCreator(SIZE);
     }
 
     /**
@@ -33,7 +33,7 @@
      * @param SIZE of map (society)
      * @return full map
      */
-    private java.util.Map<Human, java.util.Map<String, Vector>> attributesCreator(int SIZE) {
+    private java.util.Map<Human, java.util.Map<String, Vector>> mapCreator(int SIZE) {
         map = new HashMap<>();
         if (SIZE > 0) {
             ArrayList<java.util.Map<String, Vector>> attributesStack = new ArrayList<>();
